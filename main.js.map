{"version":3,"file":"main.js","mappings":";mBACA,IAAIA,EAAsB,CAAC,ECD3BA,EAAoBC,EAAI,WACvB,GAA0B,iBAAfC,WAAyB,OAAOA,WAC3C,IACC,OAAOC,MAAQ,IAAIC,SAAS,cAAb,EAGhB,CAFE,MAAOC,GACR,GAAsB,iBAAXC,OAAqB,OAAOA,MACxC,CACA,CAPuB,SCAxB,IAAIC,EACAP,EAAoBC,EAAEO,gBAAeD,EAAYP,EAAoBC,EAAEQ,SAAW,IACtF,IAAIC,EAAWV,EAAoBC,EAAES,SACrC,IAAKH,GAAaG,IACbA,EAASC,gBACZJ,EAAYG,EAASC,cAAcC,MAC/BL,GAAW,CACf,IAAIM,EAAUH,EAASI,qBAAqB,UACzCD,EAAQE,SAAQR,EAAYM,EAAQA,EAAQE,OAAS,GAAGH,IAC5D,CAID,IAAKL,EAAW,MAAM,IAAIS,MAAM,yDAChCT,EAAYA,EAAUU,QAAQ,OAAQ,IAAIA,QAAQ,QAAS,IAAIA,QAAQ,YAAa,KACpFjB,EAAoBkB,EAAIX,gSCdxB,smNACA,IAAMY,EAAe,SACfC,EAAc,4CAELC,EAAY,oEAA3B,WAA2BC,GAA3B,0EAC0B,MAApBA,EAASC,OADf,yCAEWJ,GAFX,uBAK4BG,EAASE,OALrC,cAKQC,EALR,yBAMSA,EAAYC,gBAAkBP,GANvC,kEASO,SAAeQ,IAAtB,iEAAO,oGACcC,MAAM,oCAAoCC,KAC3DR,GACA,kBAAMF,CAAN,IAHG,cACCW,EADD,yBAKEA,GALF,kEAQA,SAAeC,EAAtB,oEAAO,WAA8BD,GAA9B,gFACCE,EACJ,mEACSZ,EADT,cAC0BU,EAD1B,iBAFG,kBAMoBF,MAAMI,GAN1B,UAOqB,OADlBV,EANH,QAOUC,OAPV,sBAQK,IAAIP,MAAJ,wBAA2BM,EAASC,SARzC,uBAUUD,EAASE,OAVnB,mGAYI,MAZJ,mHAgBA,sGACkBG,IADlB,cACCM,EADD,OAELvB,SAASwB,cAAc,mBAAmBC,UAAYF,EAFjD,SAIqBF,EAAeE,GAJpC,QAICG,EAJD,SAMH1B,SAASwB,cAAc,0BAA0BC,UAC/CC,EAAYC,KAAKC,KACnB5B,SAASwB,cAAc,oBAAoBtB,IACzC,8CACGwB,EAAYG,QAAQ,GAAGC,KAD1B,UAGF9B,SAASwB,cAAc,0BAA0BC,UAAY,IAC7DzB,SAASwB,cAAc,oBAAoBtB,IAAM6B,GAb9C,8EAAP,wBCjCAC","sources":["webpack://js-basic-hw-7/webpack/bootstrap","webpack://js-basic-hw-7/webpack/runtime/global","webpack://js-basic-hw-7/webpack/runtime/publicPath","webpack://js-basic-hw-7/./src/weatherForecast.js","webpack://js-basic-hw-7/./src/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","import unknownWeatherImg from \"./unknown_weather.png\";\n\nconst DEFAULT_CITY = \"Moscow\";\nconst API_WEATHER = \"c2e143f433c82cecf1f594126af9bfd5\";\n\nasync function getCityName(response) {\n  if (response.status !== 200) {\n    return DEFAULT_CITY;\n  }\n\n  const responseObj = await response.json();\n  return responseObj.geoplugin_city || DEFAULT_CITY;\n}\n\nexport async function getCurrentCity() {\n  const city = await fetch(\"http://www.geoplugin.net/json.gp\").then(\n    getCityName,\n    () => DEFAULT_CITY\n  );\n  return city;\n}\n\nexport async function getWeatherInfo(city) {\n  const url =\n    \"https://api.openweathermap.org/data/2.5/weather?\" +\n    `appid=${API_WEATHER}&q=${city}&units=metric`;\n\n  try {\n    const response = await fetch(url);\n    if (response.status !== 200) {\n      throw new Error(`Status code = ${response.status}`);\n    }\n    return await response.json();\n  } catch {\n    return null;\n  }\n}\n\nexport async function loadStarterPage() {\n  const cityName = await getCurrentCity();\n  document.querySelector(\".forecast__city\").innerText = cityName;\n\n  const weatherInfo = await getWeatherInfo(cityName);\n  if (weatherInfo) {\n    document.querySelector(\".forecast__temperature\").innerText =\n      weatherInfo.main.temp;\n    document.querySelector(\".forecast__image\").src =\n      \"http://openweathermap.org/img/wn/\" +\n      `${weatherInfo.weather[0].icon}.png`;\n  } else {\n    document.querySelector(\".forecast__temperature\").innerText = \"?\";\n    document.querySelector(\".forecast__image\").src = unknownWeatherImg;\n  }\n}\n","import \"normalize.css\";\nimport \"./index.html\";\nimport \"./index.css\";\nimport { loadStarterPage } from \"./weatherForecast\";\n\nloadStarterPage();\n"],"names":["__webpack_require__","g","globalThis","this","Function","e","window","scriptUrl","importScripts","location","document","currentScript","src","scripts","getElementsByTagName","length","Error","replace","p","DEFAULT_CITY","API_WEATHER","getCityName","response","status","json","responseObj","geoplugin_city","getCurrentCity","fetch","then","city","getWeatherInfo","url","cityName","querySelector","innerText","weatherInfo","main","temp","weather","icon","unknownWeatherImg","loadStarterPage"],"sourceRoot":""}